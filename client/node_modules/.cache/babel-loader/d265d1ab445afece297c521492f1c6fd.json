{"ast":null,"code":"import { put, call, select } from \"redux-saga/effects\";\nimport { getFiles } from \"../services/fileSystemService\";\nimport { googleSignInInit, getRedirectUrl, dropBoxAuth } from \"../services/authenticationService\";\nimport { StartGoogleSignIn, GoogleInitSuccess, setRedirectUrl } from \"../actions/actions\";\n\nconst onAuthChange = isSignedIn => {\n  if (isSignedIn) {\n    console.log(\"loogedin\");\n  } else {\n    console.log(\"not loogedin\");\n  }\n};\n\nexport const authInstance = state => state.signInReducers.auth;\nexport const getRedirectUrlSaga = function* () {\n  try {\n    const res = yield call(getRedirectUrl);\n    console.log(res);\n    if (res.isAuthenticated) yield put(setRedirectUrl(res.data.home));else {\n      const r = yield call(dropBoxAuth, res.home);\n    }\n  } catch (e) {}\n};\nexport const initGoogleSignIn = function* () {\n  try {\n    const res = yield call(googleSignInInit);\n    yield put(GoogleInitSuccess(res()));\n  } catch (err) {}\n};\nexport const startGoogleSignIn = function* () {\n  try {\n    const auth = yield select(authInstance);\n    console.log(auth);\n\n    if (auth == null || auth == undefined) {\n      //yield put({type: types.fa})\n      return;\n    }\n\n    auth.isSignedIn.listen(onAuthChange);\n    yield auth.signIn();\n  } catch (err) {}\n};\nexport const getFilesSaga = function* () {\n  try {\n    const response = yield call(getFiles);\n  } catch (err) {}\n};","map":{"version":3,"sources":["/Users/krishnamurthy/go/src/filebox-app/client/src/sagas/sagas.js"],"names":["put","call","select","getFiles","googleSignInInit","getRedirectUrl","dropBoxAuth","StartGoogleSignIn","GoogleInitSuccess","setRedirectUrl","onAuthChange","isSignedIn","console","log","authInstance","state","signInReducers","auth","getRedirectUrlSaga","res","isAuthenticated","data","home","r","e","initGoogleSignIn","err","startGoogleSignIn","undefined","listen","signIn","getFilesSaga","response"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,MAAnB,QAAgC,oBAAhC;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,EAA0CC,WAA1C,QAA4D,mCAA5D;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,EAA8CC,cAA9C,QAAmE,oBAAnE;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AACjC,MAAGA,UAAH,EAAe;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,GAFD,MAGK;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,CAPD;;AASA,OAAO,MAAMC,YAAY,GAAGC,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,IAAnD;AAEP,OAAO,MAAMC,kBAAkB,GAAG,aAAY;AAC1C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMlB,IAAI,CAACI,cAAD,CAAtB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,QAAGA,GAAG,CAACC,eAAP,EACI,MAAMpB,GAAG,CAACS,cAAc,CAACU,GAAG,CAACE,IAAJ,CAASC,IAAV,CAAf,CAAT,CADJ,KAEK;AACD,YAAMC,CAAC,GAAG,MAAMtB,IAAI,CAACK,WAAD,EAAca,GAAG,CAACG,IAAlB,CAApB;AACH;AACJ,GARD,CASA,OAAME,CAAN,EAAS,CAER;AACJ,CAbM;AAeP,OAAO,MAAMC,gBAAgB,GAAG,aAAY;AACxC,MAAI;AACA,UAAMN,GAAG,GAAG,MAAMlB,IAAI,CAACG,gBAAD,CAAtB;AACA,UAAMJ,GAAG,CAACQ,iBAAiB,CAACW,GAAG,EAAJ,CAAlB,CAAT;AACH,GAHD,CAIA,OAAMO,GAAN,EAAW,CAEV;AACJ,CARM;AAUP,OAAO,MAAMC,iBAAiB,GAAG,aAAY;AACzC,MAAI;AACA,UAAMV,IAAI,GAAG,MAAMf,MAAM,CAACY,YAAD,CAAzB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,QAAGA,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAIW,SAA3B,EAAsC;AAClC;AACA;AACH;;AACDX,IAAAA,IAAI,CAACN,UAAL,CAAgBkB,MAAhB,CAAuBnB,YAAvB;AACA,UAAMO,IAAI,CAACa,MAAL,EAAN;AACH,GATD,CAUA,OAAMJ,GAAN,EAAW,CAEV;AACJ,CAdM;AAgBP,OAAO,MAAMK,YAAY,GAAG,aAAY;AACpC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM/B,IAAI,CAACE,QAAD,CAA3B;AACH,GAFD,CAGA,OAAMuB,GAAN,EAAW,CACV;AACJ,CANM","sourcesContent":["import {put, call, select} from \"redux-saga/effects\";\nimport {getFiles} from \"../services/fileSystemService\";\nimport {googleSignInInit, getRedirectUrl, dropBoxAuth} from \"../services/authenticationService\";\nimport {StartGoogleSignIn, GoogleInitSuccess, setRedirectUrl} from \"../actions/actions\";\n\nconst onAuthChange = (isSignedIn) => {\n    if(isSignedIn) {\n        console.log(\"loogedin\")\n    }\n    else {\n        console.log(\"not loogedin\")\n    }\n}\n\nexport const authInstance = state => state.signInReducers.auth;\n\nexport const getRedirectUrlSaga = function*() {\n    try {\n        const res = yield call(getRedirectUrl);\n        console.log(res)\n        if(res.isAuthenticated)\n            yield put(setRedirectUrl(res.data.home));\n        else {\n            const r = yield call(dropBoxAuth, res.home)\n        }\n    }\n    catch(e) {\n\n    }\n}\n\nexport const initGoogleSignIn = function*() {\n    try {\n        const res = yield call(googleSignInInit);\n        yield put(GoogleInitSuccess(res()));\n    }\n    catch(err) {\n\n    }\n}\n\nexport const startGoogleSignIn = function*() {\n    try {\n        const auth = yield select(authInstance);\n        console.log(auth);\n        if(auth == null || auth == undefined) {\n            //yield put({type: types.fa})\n            return\n        }\n        auth.isSignedIn.listen(onAuthChange);\n        yield auth.signIn();\n    }\n    catch(err) {\n\n    }\n}\n\nexport const getFilesSaga = function*() {\n    try {\n        const response = yield call(getFiles)\n    }\n    catch(err) {\n    }\n}"]},"metadata":{},"sourceType":"module"}