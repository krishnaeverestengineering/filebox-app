{"ast":null,"code":"var _jsxFileName = \"/Users/krishnamurthy/go/src/filebox-app/client/src/pages/connectpage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { authenticateUserAction } from \"../actions/actions\";\nimport { urlParams } from \"../helpers\";\nimport { Redirect } from \"react-router-dom\";\n\nclass ConnectPage extends React.Component {\n  componentDidMount() {\n    // const id = window.gapi.auth2[\"currentUser\"].get().getId();\n    console.log(window.gapi); //this.props.dispatch(authenticateUserAction(id))\n  }\n\n  componentWillReceiveProps(newProps) {\n    let id = this.props.auth == null ? -1 : this.props.auth[\"currentUser\"].get().getId();\n\n    if (newProps.auth.currentUser.get().getId() !== id) {\n      this.props.dispatch(authenticateUserAction(newProps.auth.currentUser.get().getId()));\n    }\n  }\n\n  render() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nexport const mapStateToProps = state => {\n  console.log(state);\n  return {\n    isSignedIn: state.signInReducers.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, null)(ConnectPage);","map":{"version":3,"sources":["/Users/krishnamurthy/go/src/filebox-app/client/src/pages/connectpage.js"],"names":["React","connect","authenticateUserAction","urlParams","Redirect","ConnectPage","Component","componentDidMount","console","log","window","gapi","componentWillReceiveProps","newProps","id","props","auth","get","getId","currentUser","dispatch","render","isSignedIn","mapStateToProps","state","signInReducers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,sBAAR,QAAqC,oBAArC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACtCC,EAAAA,iBAAiB,GAAG;AACjB;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAnB,EAFgB,CAGhB;AACH;;AAEDC,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,QAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,IAAX,IAAmB,IAAnB,GAA0B,CAAC,CAA3B,GAA+B,KAAKD,KAAL,CAAWC,IAAX,CAAgB,aAAhB,EAA+BC,GAA/B,GAAqCC,KAArC,EAAxC;;AACA,QAAGL,QAAQ,CAACG,IAAT,CAAcG,WAAd,CAA0BF,GAA1B,GAAgCC,KAAhC,OAA4CJ,EAA/C,EAAmD;AAC3C,WAAKC,KAAL,CAAWK,QAAX,CAAoBlB,sBAAsB,CAACW,QAAQ,CAACG,IAAT,CAAcG,WAAd,CAA0BF,GAA1B,GAAgCC,KAAhC,EAAD,CAA1C;AACP;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKN,KAAL,CAAWO,UAAd,EAA0B;AACtB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAND,MAMO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH;AACJ;;AA5BqC;;AA+B1C,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACtChB,EAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACA,SAAO;AACHF,IAAAA,UAAU,EAAEE,KAAK,CAACC,cAAN,CAAqBH;AAD9B,GAAP;AAGH,CALM;AAOP,eAAerB,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,WAA/B,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {authenticateUserAction} from \"../actions/actions\";\nimport { urlParams } from \"../helpers\";\nimport { Redirect } from \"react-router-dom\";\n\nclass ConnectPage extends React.Component {\n    componentDidMount() {\n       // const id = window.gapi.auth2[\"currentUser\"].get().getId();\n        console.log(window.gapi)\n        //this.props.dispatch(authenticateUserAction(id))\n    }\n\n    componentWillReceiveProps(newProps) {\n        let id = this.props.auth == null ? -1 : this.props.auth[\"currentUser\"].get().getId();\n        if(newProps.auth.currentUser.get().getId() !== id) {\n                this.props.dispatch(authenticateUserAction(newProps.auth.currentUser.get().getId()))\n        }\n    }\n\n    render() {\n        if(this.props.isSignedIn) {\n            return(\n                <div>\n                    <Redirect to = \"/files\" />\n                </div>\n            )\n        } else {\n            return(\n                <div>\n                    Loading...\n                </div>\n            )\n        }\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        isSignedIn: state.signInReducers.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, null)(ConnectPage);"]},"metadata":{},"sourceType":"module"}