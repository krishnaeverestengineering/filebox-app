{"ast":null,"code":"var _jsxFileName = \"/Users/krishnamurthy/go/src/filebox-app/client/src/views/login/login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { InitGoogleSignIn, StartGoogleSignIn } from \"../../actions/actions\";\nimport { Button } from \"@material-ui/core\";\nimport * as types from \"../../actions/actionTypes\";\n\nclass LoginPage extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        console.log(\"loogedin\");\n        this.props.dispatch({\n          type: types.SUCCESS_GOOGLE_SIGNIN\n        });\n      } else {\n        console.log(\"not loogedin\");\n        this.props.dispatch({\n          type: types.FAILED_GOOGLE_SIGNIN\n        });\n      }\n    };\n\n    this.onGoogleSignInClicked = () => {\n      //this.props.dispatch(StartGoogleSignIn());\n      this.props.auth.isSignedIn.listen(this.onAuthChange);\n      this.props.auth.signIn();\n    };\n  }\n\n  render() {\n    if (this.props.isSignedIn) {\n      this.props.history.push(\"/files\");\n      return null;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onGoogleSignInClicked,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Sign In with Google\"));\n    }\n  }\n\n}\n\nexport const mapStateToProps = state => {\n  return {\n    auth: state.signInReducers.auth,\n    isSignedIn: state.signInReducers.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, null)(LoginPage);","map":{"version":3,"sources":["/Users/krishnamurthy/go/src/filebox-app/client/src/views/login/login.js"],"names":["React","connect","InitGoogleSignIn","StartGoogleSignIn","Button","types","LoginPage","PureComponent","onAuthChange","isSignedIn","console","log","props","dispatch","type","SUCCESS_GOOGLE_SIGNIN","FAILED_GOOGLE_SIGNIN","onGoogleSignInClicked","auth","listen","signIn","render","history","push","mapStateToProps","state","signInReducers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,iBAA1B,QAAkD,uBAAlD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,2BAAvB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,aAA9B,CAA4C;AAAA;AAAA;;AAAA,SAExCC,YAFwC,GAExBC,UAAD,IAAgB;AAC3B,UAAGA,UAAH,EAAe;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAKC,KAAL,CAAWC,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAET,KAAK,CAACU;AAAb,SAApB;AACH,OAHD,MAIK;AACDL,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAKC,KAAL,CAAWC,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAET,KAAK,CAACW;AAAb,SAApB;AACH;AACJ,KAXuC;;AAAA,SAaxCC,qBAbwC,GAahB,MAAM;AAC1B;AACA,WAAKL,KAAL,CAAWM,IAAX,CAAgBT,UAAhB,CAA2BU,MAA3B,CAAkC,KAAKX,YAAvC;AACA,WAAKI,KAAL,CAAWM,IAAX,CAAgBE,MAAhB;AACH,KAjBuC;AAAA;;AAmBxCC,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKT,KAAL,CAAWH,UAAd,EAA0B;AACtB,WAAKG,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACA,aAAO,IAAP;AAEH,KAJD,MAKK;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAI,KAAKN,qBAAxB;AACI,QAAA,OAAO,EAAG,WADd;AAEI,QAAA,KAAK,EAAG,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AASH;AACJ;;AApCuC;;AAuC5C,OAAO,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACtC,SAAO;AACHP,IAAAA,IAAI,EAAEO,KAAK,CAACC,cAAN,CAAqBR,IADxB;AAEHT,IAAAA,UAAU,EAAEgB,KAAK,CAACC,cAAN,CAAqBjB;AAF9B,GAAP;AAIH,CALM;AAOP,eAAeR,OAAO,CAACuB,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,SAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {InitGoogleSignIn, StartGoogleSignIn} from \"../../actions/actions\"\nimport { Button } from \"@material-ui/core\";\nimport * as types from \"../../actions/actionTypes\";\n\nclass LoginPage extends React.PureComponent {\n\n    onAuthChange = (isSignedIn) => {\n        if(isSignedIn) {\n            console.log(\"loogedin\")\n            this.props.dispatch({type: types.SUCCESS_GOOGLE_SIGNIN})\n        }\n        else {\n            console.log(\"not loogedin\")\n            this.props.dispatch({type: types.FAILED_GOOGLE_SIGNIN})\n        }\n    }\n\n    onGoogleSignInClicked = () => {\n        //this.props.dispatch(StartGoogleSignIn());\n        this.props.auth.isSignedIn.listen(this.onAuthChange)\n        this.props.auth.signIn();\n    }\n\n    render() {\n        if(this.props.isSignedIn) {\n            this.props.history.push(\"/files\");\n            return null\n            \n        }\n        else {\n            return (\n                <div>\n                    <Button onClick = {this.onGoogleSignInClicked}\n                        variant = \"contained\" \n                        color = \"secondary\" >\n                        Sign In with Google\n                    </Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n        auth: state.signInReducers.auth,\n        isSignedIn: state.signInReducers.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, null)(LoginPage);\n\n"]},"metadata":{},"sourceType":"module"}