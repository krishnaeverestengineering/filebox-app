{"ast":null,"code":"var _jsxFileName = \"/Users/krishnamurthy/go/src/filebox-app/client/src/components/helpers/ngif.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport class NgIf extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let clean_prop = Object.assign({}, this.props);\n    delete clean_prop.cond;\n    delete clean_prop.children;\n    delete clean_prop.type;\n\n    if (this.props.cond) {\n      return React.createElement(\"div\", Object.assign({}, clean_prop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), this.props.children);\n    } else {\n      return null;\n    }\n  }\n\n}\nNgIf.propTypes = {\n  cond: PropTypes.bool.isRequired,\n  type: PropTypes.string\n};\nexport class NgShow extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let clean_prop = Object.assign({}, this.props);\n    delete clean_prop.cond;\n    delete clean_prop.children;\n    delete clean_prop.type;\n\n    if (this.props.cond) {\n      return React.createElement(\"div\", Object.assign({}, clean_prop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), this.props.children);\n    } else {\n      return React.createElement(\"div\", {\n        style: {\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }\n\n}\nNgShow.propTypes = {\n  cond: PropTypes.bool.isRequired,\n  type: PropTypes.string\n};","map":{"version":3,"sources":["/Users/krishnamurthy/go/src/filebox-app/client/src/components/helpers/ngif.js"],"names":["React","PropTypes","NgIf","Component","constructor","props","render","clean_prop","Object","assign","cond","children","type","propTypes","bool","isRequired","string","NgShow","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKJ,KAAvB,CAAjB;AACA,WAAOE,UAAU,CAACG,IAAlB;AACA,WAAOH,UAAU,CAACI,QAAlB;AACA,WAAOJ,UAAU,CAACK,IAAlB;;AACA,QAAG,KAAKP,KAAL,CAAWK,IAAd,EAAmB;AACf,aAAO,6CAASH,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsB,KAAKF,KAAL,CAAWM,QAAjC,CAAP;AACH,KAFD,MAEK;AACD,aAAO,IAAP;AACH;AACJ;;AAfqC;AAkB1CT,IAAI,CAACW,SAAL,GAAiB;AACbH,EAAAA,IAAI,EAAET,SAAS,CAACa,IAAV,CAAeC,UADR;AAEbH,EAAAA,IAAI,EAAEX,SAAS,CAACe;AAFH,CAAjB;AAKA,OAAO,MAAMC,MAAN,SAAqBjB,KAAK,CAACG,SAA3B,CAAqC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKJ,KAAvB,CAAjB;AACA,WAAOE,UAAU,CAACG,IAAlB;AACA,WAAOH,UAAU,CAACI,QAAlB;AACA,WAAOJ,UAAU,CAACK,IAAlB;;AACA,QAAG,KAAKP,KAAL,CAAWK,IAAd,EAAmB;AACf,aAAO,6CAASH,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsB,KAAKF,KAAL,CAAWM,QAAjC,CAAP;AACH,KAFD,MAEK;AACD,aACI;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKb,KAAL,CAAWM,QADd,CADJ;AAKH;AACJ;;AAnBuC;AAsB5CM,MAAM,CAACJ,SAAP,GAAmB;AACfH,EAAAA,IAAI,EAAET,SAAS,CAACa,IAAV,CAAeC,UADN;AAEfH,EAAAA,IAAI,EAAEX,SAAS,CAACe;AAFD,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NgIf extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        let clean_prop = Object.assign({}, this.props);\n        delete clean_prop.cond;\n        delete clean_prop.children;\n        delete clean_prop.type;\n        if(this.props.cond){\n            return <div {...clean_prop}>{this.props.children}</div>;\n        }else{\n            return null;\n        }\n    }\n}\n\nNgIf.propTypes = {\n    cond: PropTypes.bool.isRequired,\n    type: PropTypes.string\n};\n\nexport class NgShow extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        let clean_prop = Object.assign({}, this.props);\n        delete clean_prop.cond;\n        delete clean_prop.children;\n        delete clean_prop.type;\n        if(this.props.cond){\n            return <div {...clean_prop}>{this.props.children}</div>;\n        }else{\n            return (\n                <div style={{display: \"none\"}}>\n                  {this.props.children}\n                </div>\n            );\n        }\n    }\n}\n\nNgShow.propTypes = {\n    cond: PropTypes.bool.isRequired,\n    type: PropTypes.string\n};"]},"metadata":{},"sourceType":"module"}