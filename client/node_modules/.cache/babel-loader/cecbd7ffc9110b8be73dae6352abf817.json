{"ast":null,"code":"var _jsxFileName = \"/Users/krishnamurthy/go/src/filebox-app/client/src/views/login/login.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { InitGoogleSignIn, StartGoogleSignIn } from \"../../actions/actions\";\nimport { Button } from \"@material-ui/core\";\nimport * as types from \"../../actions/actionTypes\";\nimport { urlParams } from \"../../helpers\";\n\nclass LoginPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        console.log(\"loogedin\");\n        this.props.dispatch({\n          type: types.SUCCESS_GOOGLE_SIGNIN\n        });\n      } else {\n        console.log(\"not loogedin\");\n        this.props.dispatch({\n          type: types.FAILED_GOOGLE_SIGNIN\n        });\n      }\n    };\n\n    this.onGoogleSignInClicked = () => {\n      //this.props.dispatch(StartGoogleSignIn());\n      //this.props.auth.isSignedIn.listen(this.onAuthChange)\n      this.props.auth.signIn();\n    };\n\n    this.state = {\n      showPopup: false\n    };\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  componentDidMount() {\n    const urlData = urlParams();\n    console.log(urlData);\n  }\n\n  render() {\n    if (this.props.ok == \"ok\") {\n      return React.createElement(Redirect, {\n        to: \"/files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.togglePopup.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" Click To Launch Popup\"), React.createElement(Button, {\n        onClick: this.onGoogleSignInClicked,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Sign In with Google\"));\n    }\n  }\n\n}\n\nexport const mapStateToProps = state => {\n  return {\n    auth: state.signInReducers.auth,\n    isSignedIn: state.signInReducers.isSignedIn,\n    ok: state.signInReducers.ok\n  };\n};\nexport default connect(mapStateToProps, null)(LoginPage);","map":{"version":3,"sources":["/Users/krishnamurthy/go/src/filebox-app/client/src/views/login/login.js"],"names":["React","connect","Redirect","InitGoogleSignIn","StartGoogleSignIn","Button","types","urlParams","LoginPage","PureComponent","constructor","props","onAuthChange","isSignedIn","console","log","dispatch","type","SUCCESS_GOOGLE_SIGNIN","FAILED_GOOGLE_SIGNIN","onGoogleSignInClicked","auth","signIn","state","showPopup","togglePopup","setState","componentDidMount","urlData","render","ok","bind","mapStateToProps","signInReducers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,gBAAR,EAA0BC,iBAA1B,QAAkD,uBAAlD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,2BAAvB;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,aAA9B,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAgBlBC,YAhBkB,GAgBFC,UAAD,IAAgB;AAC3B,UAAGA,UAAH,EAAe;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAKJ,KAAL,CAAWK,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAEX,KAAK,CAACY;AAAb,SAApB;AACH,OAHD,MAIK;AACDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAKJ,KAAL,CAAWK,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAEX,KAAK,CAACa;AAAb,SAApB;AACH;AACJ,KAzBiB;;AAAA,SA2BlBC,qBA3BkB,GA2BM,MAAM;AAC1B;AACA;AACA,WAAKT,KAAL,CAAWU,IAAX,CAAgBC,MAAhB;AACH,KA/BiB;;AAEd,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACC;;AAECC,EAAAA,WAAW,GAAG;AAChB,SAAKC,QAAL,CAAc;AACTF,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADd,KAAd;AAGE;;AAENG,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACH;;AAmBDC,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKlB,KAAL,CAAWmB,EAAX,IAAiB,IAApB,EAA0B;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAGK;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKL,WAAL,CAAiBM,IAAjB,CAAsB,IAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAI,KAAKX,qBAAxB;AACI,QAAA,OAAO,EAAG,WADd;AAEI,QAAA,KAAK,EAAG,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CADJ;AAUH;AACJ;;AAnDuC;;AAsD5C,OAAO,MAAMY,eAAe,GAAIT,KAAD,IAAW;AACtC,SAAO;AACHF,IAAAA,IAAI,EAAEE,KAAK,CAACU,cAAN,CAAqBZ,IADxB;AAEHR,IAAAA,UAAU,EAAEU,KAAK,CAACU,cAAN,CAAqBpB,UAF9B;AAGHiB,IAAAA,EAAE,EAAEP,KAAK,CAACU,cAAN,CAAqBH;AAHtB,GAAP;AAKH,CANM;AAQP,eAAe7B,OAAO,CAAC+B,eAAD,EAAkB,IAAlB,CAAP,CAA+BxB,SAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {InitGoogleSignIn, StartGoogleSignIn} from \"../../actions/actions\"\nimport { Button } from \"@material-ui/core\";\nimport * as types from \"../../actions/actionTypes\";\nimport { urlParams } from \"../../helpers\";\n\nclass LoginPage extends React.PureComponent {\n\n    constructor(props){  \n        super(props);  \n        this.state = { showPopup: false };  \n        }  \n        \n          togglePopup() {  \n        this.setState({  \n             showPopup: !this.state.showPopup  \n        });  \n         }  \n\n    componentDidMount() {\n        const urlData = urlParams()\n        console.log(urlData)\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if(isSignedIn) {\n            console.log(\"loogedin\")\n            this.props.dispatch({type: types.SUCCESS_GOOGLE_SIGNIN})\n        }\n        else {\n            console.log(\"not loogedin\")\n            this.props.dispatch({type: types.FAILED_GOOGLE_SIGNIN})\n        }\n    }\n\n    onGoogleSignInClicked = () => {\n        //this.props.dispatch(StartGoogleSignIn());\n        //this.props.auth.isSignedIn.listen(this.onAuthChange)\n        this.props.auth.signIn();\n    }\n\n    render() {\n        if(this.props.ok == \"ok\") {\n            return <Redirect to=\"/files\" />;\n        }\n        else {\n            return (\n                <div>\n                    <button onClick={this.togglePopup.bind(this)}> Click To Launch Popup</button>  \n                    <Button onClick = {this.onGoogleSignInClicked}\n                        variant = \"contained\" \n                        color = \"secondary\" >\n                        Sign In with Google\n                    </Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return {\n        auth: state.signInReducers.auth,\n        isSignedIn: state.signInReducers.isSignedIn,\n        ok: state.signInReducers.ok,\n    }\n}\n\nexport default connect(mapStateToProps, null)(LoginPage);\n\n"]},"metadata":{},"sourceType":"module"}